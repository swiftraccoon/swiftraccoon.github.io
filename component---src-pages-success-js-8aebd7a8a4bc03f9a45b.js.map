{"version":3,"file":"component---src-pages-success-js-8aebd7a8a4bc03f9a45b.js","mappings":"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","sources":["webpack://swiftraccoon-notes/./src/components/header.js","webpack://swiftraccoon-notes/./src/components/layout.js","webpack://swiftraccoon-notes/./src/components/seo.js","webpack://swiftraccoon-notes/./src/pages/success.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      margin: `0 auto`,\n      padding: `var(--space-4) var(--size-gutter)`,\n      display: `flex`,\n      alignItems: `center`,\n      justifyContent: `space-between`,\n      borderBottom: `1px solid rgba(255, 255, 255, 0.1)`,\n      backgroundColor: `var(--color-surface)`,\n      position: `relative`,\n    }}\n  >\n    {/* Blue/Purple Gradient Line */}\n    <div \n      style={{\n        position: \"absolute\",\n        bottom: 0,\n        left: 0,\n        right: 0,\n        height: \"2px\",\n        background: \"linear-gradient(90deg, var(--color-blue) 0%, var(--color-primary) 50%, var(--color-secondary) 100%)\"\n      }}\n    />\n    \n    <Link\n      to=\"/\"\n      style={{\n        fontSize: `var(--font-md)`,\n        fontWeight: `600`,\n        textDecoration: `none`,\n        background: `linear-gradient(90deg, var(--color-blue) 0%, var(--color-primary) 100%)`,\n        WebkitBackgroundClip: `text`,\n        WebkitTextFillColor: `transparent`,\n        letterSpacing: `0.5px`,\n      }}\n    >\n      {siteTitle}\n    </Link>\n    <nav>\n      <Link\n        to=\"/\"\n        style={{\n          fontSize: `var(--font-sm)`,\n          textDecoration: `none`,\n          marginRight: `var(--space-4)`,\n          color: `var(--color-text)`,\n          transition: `color 0.2s ease`,\n        }}\n        activeStyle={{\n          color: `var(--color-blue)`,\n        }}\n      >\n        Home\n      </Link>\n      <Link\n        to=\"/about\"\n        style={{\n          fontSize: `var(--font-sm)`,\n          textDecoration: `none`,\n          marginRight: `var(--space-4)`,\n          color: `var(--color-text)`,\n          transition: `color 0.2s ease`,\n        }}\n        activeStyle={{\n          color: `var(--color-blue)`,\n        }}\n      >\n        About\n      </Link>\n      <Link\n        to=\"/contact\"\n        style={{\n          fontSize: `var(--font-sm)`,\n          textDecoration: `none`,\n          color: `var(--color-text)`,\n          transition: `color 0.2s ease`,\n        }}\n        activeStyle={{\n          color: `var(--color-blue)`,\n        }}\n      >\n        Contact\n      </Link>\n    </nav>\n  </header>\n)\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: `var(--size-content)`,\n          padding: `var(--size-gutter)`,\n          backgroundColor: `var(--color-background)`,\n          minHeight: `calc(100vh - 150px)`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            marginTop: `var(--space-5)`,\n            fontSize: `var(--font-sm)`,\n            color: `var(--color-text-secondary)`,\n            textAlign: `center`,\n            padding: `var(--space-4) 0`,\n            borderTop: `1px solid rgba(255, 255, 255, 0.05)`,\n          }}\n        >\n          Â© {new Date().getFullYear()} &middot; Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\" style={{ color: `var(--color-primary)` }}>Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst SuccessPage = () => (\n  <Layout>\n    <div style={{ textAlign: \"center\", padding: \"var(--space-6) 0\" }}>\n      <svg \n        xmlns=\"http://www.w3.org/2000/svg\" \n        width=\"64\" \n        height=\"64\" \n        viewBox=\"0 0 24 24\" \n        fill=\"none\" \n        stroke=\"var(--color-primary)\" \n        strokeWidth=\"2\" \n        strokeLinecap=\"round\" \n        strokeLinejoin=\"round\"\n        style={{ marginBottom: \"var(--space-4)\" }}\n      >\n        <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\n        <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\n      </svg>\n      \n      <h1 style={{ marginBottom: \"var(--space-4)\" }}>\n        Message <span style={{ color: \"var(--color-accent)\" }}>Received!</span>\n      </h1>\n      \n      <p style={{ maxWidth: \"500px\", margin: \"0 auto\", marginBottom: \"var(--space-5)\" }}>\n        Thank you for reaching out. I've received your message and will get back to you as soon as possible.\n      </p>\n      \n      <Link \n        to=\"/\" \n        style={{\n          backgroundColor: \"var(--color-primary)\",\n          color: \"white\",\n          padding: \"var(--space-3) var(--space-5)\",\n          borderRadius: \"var(--border-radius)\",\n          display: \"inline-block\",\n          textDecoration: \"none\",\n          fontSize: \"var(--font-md)\",\n          transition: \"background-color 0.2s ease\"\n        }}\n      >\n        Return to Home\n      </Link>\n    </div>\n  </Layout>\n)\n\nexport const Head = () => <Seo title=\"Message Received\" description=\"Thank you for your message\" />\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n\nexport default SuccessPage "],"names":["_ref","siteTitle","React","style","margin","padding","display","alignItems","justifyContent","borderBottom","backgroundColor","position","bottom","left","right","height","background","Link","to","fontSize","fontWeight","textDecoration","WebkitBackgroundClip","WebkitTextFillColor","letterSpacing","marginRight","color","transition","activeStyle","_data$site$siteMetada","children","data","useStaticQuery","Header","site","siteMetadata","title","maxWidth","minHeight","marginTop","textAlign","borderTop","Date","getFullYear","href","_site$siteMetadata","_site$siteMetadata2","description","metaDescription","defaultTitle","name","content","property","author","Head","Seo","SuccessPage","Layout","xmlns","width","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","marginBottom","d","points","borderRadius"],"sourceRoot":""}